from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from keyboards.reply import main_menu
import sqlite3
from datetime import datetime

router = Router()

# ‚ùóÔ∏è–ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π Telegram ID
ADMIN_ID = 6314661034

# –ú–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—ñ–≤ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
class OrderState(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()
    waiting_for_address = State()

# –ü–æ—á–∞—Ç–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ —ñ–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É
@router.callback_query(F.data == "order")
async def start_order(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:")
    await state.set_state(OrderState.waiting_for_name)
    await callback.answer()  # –ó–∞–∫—Ä–∏–≤–∞—î –∫—Ä—É–∂–µ—á–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏

@router.message(OrderState.waiting_for_name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    await state.set_state(OrderState.waiting_for_phone)

@router.message(OrderState.waiting_for_phone)
async def get_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ –∞–±–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏:")
    await state.set_state(OrderState.waiting_for_address)

@router.message(OrderState.waiting_for_address)
async def get_address(message: Message, state: FSMContext):
    await state.update_data(address=message.text)
    data = await state.get_data()

    conn = sqlite3.connect("data/dava_bayer.db")
    cur = conn.cursor()
    cur.execute("""
        SELECT products.name, products.price, cart.quantity
        FROM cart
        JOIN products ON cart.product_id = products.id
        WHERE cart.user_id = ?
    """, (message.from_user.id,))
    products = cur.fetchall()
    conn.close()

    if not products:
        await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è ‚ùå")
        await state.clear()
        return

    total = sum(price * quantity for _, price, quantity in products)
    product_list = "\n".join([
        f"‚Ä¢ {name} ‚Äî {price} –≥—Ä–Ω √ó {quantity} —à—Ç = {price * quantity} –≥—Ä–Ω"
        for name, price, quantity in products
    ])

    admin_text = (
        f"üõí –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:\n\n"
        f"üë§ –Ü–º'—è: {data['name']}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\nüìç –ê–¥—Ä–µ—Å–∞: {data['address']}\n\n"
        f"üõç –¢–æ–≤–∞—Ä–∏:\n{product_list}\n\n"
        f"üí∞ –°—É–º–∞: {total} –≥—Ä–Ω\n"
        f"Telegram: @{message.from_user.username or '–Ω–µ–º–∞—î'}\n"
        f"ID: {message.from_user.id}"
    )

    await message.answer("‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! –ú–∏ —Å–∫–æ—Ä–æ –∑ –≤–∞–º–∏ –∑–≤ º—è–∂–µ–º–æ—Å—è.")
    await message.answer("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–∞—Å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚¨áÔ∏è", reply_markup=main_menu)
    await state.clear()

    await message.bot.send_message(chat_id=ADMIN_ID, text=admin_text)

    conn = sqlite3.connect("data/dava_bayer.db")
    cur = conn.cursor()
    cur.execute("DELETE FROM cart WHERE user_id = ?", (message.from_user.id,))
    conn.commit()
    conn.close()
